{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,iFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBCuE/BC,EA/DG,SAACL,GAGjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAwBrB,OACE,cAAC,WAAD,UAGE,cAAC,EAAD,UACE,uBACEE,QAbmB,aAcnBR,UAAWC,IAAQQ,KACnBC,SA9BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBR,EAAeS,QAAQC,MACvCC,EAAcT,EAAaO,QAAQC,MAIzChB,EAAMkB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAmB5C,UAKGjB,EAAMqB,WACL,qBAAKpB,UAAWC,IAAQoB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKtB,UAAWC,IAAQsB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,OAEtC,sBAAKL,UAAWC,IAAQsB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,OAEpC,qBAAKP,UAAWC,IAAQ4B,QAAxB,SACE,wBAAQC,QApCY,aAoCoB9B,UAAU,MAAlD,iC,gBCxCG+B,UAjBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAWC,cAEjBC,qBAAU,WACO,cAAXH,GACFC,EAAS,aAEV,CAACD,EAAQC,IAIZ,OACE,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WAHtB,SAACsB,GAAD,OAAeL,EAAYK","file":"static/js/4.c1fd87af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__mQtp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1HrvI\",\"loading\":\"QuoteForm_loading__2F0cs\",\"control\":\"QuoteForm_control__2-8Hv\",\"actions\":\"QuoteForm_actions__18Vq2\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import {\n  Fragment,\n  useRef,\n  // useState\n} from 'react';\n// import { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  // const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    // setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    // setIsEntering(true);\n  };\n\n  // const showMessage = () =>\n  //   `Are you sure you want to leave? All your entered data will be lost!`;\n\n  return (\n    <Fragment>\n      {/* Prompt is currently not supported yet by v6 */}\n      {/* <Prompt when={isEntering} message={showMessage} /> */}\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigate('/quotes');\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = (quoteData) => sendRequest(quoteData);\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}