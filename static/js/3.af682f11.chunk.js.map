{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortingMethod","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,iBAAiB,oC,mBCAvGD,EAAOC,QAAU,CAAC,SAAW,kC,wFCmBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCsCSC,EApCG,SAACR,GACjB,IAVkBS,EAAQC,EAUpBC,EAAWC,cACXC,EAAWC,cAIXC,EAAiD,cAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,EAAgBJ,EAAqB,aAAe,YAEpDK,GAnBYX,EAmBcT,EAAMS,OAnBZC,EAmBoBK,EAlB9CN,EAAOY,MAAK,SAACC,EAAQC,GACnB,OAAIb,EACKY,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,EAE7Be,EAAOf,GAAKgB,EAAOhB,GAAK,GAAK,MA2BxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQsB,QAAxB,SACE,yBAAQC,QAde,WAC3Bd,EAAS,CACPe,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWE,MAWf,iBACO,IACL,sBAAMlB,UAAWC,IAAQ,kBAAzB,SAA6CiB,SAGjD,oBAAIlB,UAAWC,IAAQyB,KAAvB,SAA8BP,EAAaQ,KAZzB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,GAAIF,EAAP,EAAOA,OAAQD,EAAf,EAAeA,KAAf,OACpB,cAAC,EAAD,CAAoBG,GAAIA,EAAIF,OAAQA,EAAQD,KAAMA,GAAlCG,Y,wBCpBLsB,EAXO,WACpB,OACE,sBAAK5B,UAAWC,IAAQ4B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMxB,GAAG,aAAaL,UAAU,MAAhC,6B,gBC+BS8B,UA/BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKlC,UAAU,WAAf,SACE,cAACuC,EAAA,EAAD,MAKFF,EACK,mBAAGrC,UAAW,mBAAd,SAAmCqC,IAG5B,cAAXH,IAA2BC,GAAyC,IAAxBA,EAAaK,OACrD,cAAC,EAAD,IAGF,cAAC,EAAD,CAAWhC,OAAQ2B","file":"static/js/3.af682f11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3CM2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__aWzXa\",\"sorting\":\"QuoteList_sorting__t-web\",\"sorting-method\":\"QuoteList_sorting-method__1JLru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3b8mK\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) =>\n  quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'ascending';\n\n  const sortingMethod = isSortingAscending ? 'descending' : 'ascending';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    navigate({\n      pathname: location.pathname,\n      search: `?sort=${sortingMethod}`,\n    });\n  };\n\n  const mapQuoteItems = ({ id, author, text }) => (\n    <QuoteItem key={id} id={id} author={author} text={text} />\n  );\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort{' '}\n          <span className={classes['sorting-method']}>{sortingMethod}</span>\n        </button>\n      </div>\n      <ul className={classes.list}>{sortedQuotes.map(mapQuoteItems)}</ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className={'centered focused'}>{error}</p>;\r\n  }\r\n\r\n  if ((status === 'completed' && !loadedQuotes) || loadedQuotes.length === 0) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}