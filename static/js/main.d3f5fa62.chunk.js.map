{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/quotes/QuoteList.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortingMethod","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","quote","QuoteDetail","useParams","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","isActiveClass","navData","isActive","active","MainNavigation","header","logo","nav","Layout","main","NotFound","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3f5fa62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1HrvI\",\"loading\":\"QuoteForm_loading__2F0cs\",\"control\":\"QuoteForm_control__2-8Hv\",\"actions\":\"QuoteForm_actions__18Vq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2ksvI\",\"logo\":\"MainNavigation_logo__3bLH-\",\"nav\":\"MainNavigation_nav__3HDbh\",\"active\":\"MainNavigation_active__3SBhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__aWzXa\",\"sorting\":\"QuoteList_sorting__t-web\",\"sorting-method\":\"QuoteList_sorting-method__1JLru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1HKmI\",\"loading\":\"NewCommentForm_loading__3CZhn\",\"control\":\"NewCommentForm_control__2Iz4b\",\"actions\":\"NewCommentForm_actions__1055t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3CM2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__26oi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3b8mK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__Vma-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__mQtp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__172W4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1ALDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2LxhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__32t10\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) =>\n  quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'ascending';\n\n  const sortingMethod = isSortingAscending ? 'descending' : 'ascending';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    navigate({\n      pathname: location.pathname,\n      search: `?sort=${sortingMethod}`,\n    });\n  };\n\n  const mapQuoteItems = ({ id, author, text }) => (\n    <QuoteItem key={id} id={id} author={author} text={text} />\n  );\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort{' '}\n          <span className={classes['sorting-method']}>{sortingMethod}</span>\n        </button>\n      </div>\n      <ul className={classes.list}>{sortedQuotes.map(mapQuoteItems)}</ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-http-7aca5-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: 'POST',\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className={'centered focused'}>{error}</p>;\r\n  }\r\n\r\n  if ((status === 'completed' && !loadedQuotes) || loadedQuotes.length === 0) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Outlet } from 'react-router-dom';\r\n\r\nimport HighLightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const { quoteId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found.</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighLightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import {\n  Fragment,\n  useRef,\n  // useState\n} from 'react';\n// import { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  // const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    // setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    // setIsEntering(true);\n  };\n\n  // const showMessage = () =>\n  //   `Are you sure you want to leave? All your entered data will be lost!`;\n\n  return (\n    <Fragment>\n      {/* Prompt is currently not supported yet by v6 */}\n      {/* <Prompt when={isEntering} message={showMessage} /> */}\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigate('/quotes');\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = (quoteData) => sendRequest(quoteData);\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst isActiveClass = (navData) => (navData.isActive ? classes.active : '');\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" className={isActiveClass}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" className={isActiveClass}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from 'react';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","const NotFound = () => (\r\n  <div className=\"centered\">\r\n    <p>Page not found.</p>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet.</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Route, Routes, Navigate, Link } from 'react-router-dom';\n\nimport AllQuotes from './pages/AllQuotes';\nimport QuoteDetail from './pages/QuoteDetail';\nimport NewQuote from './pages/NewQuote';\nimport Layout from './components/layout/Layout';\nimport NotFound from './pages/NotFound';\nimport Comments from './components/comments/Comments';\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />}></Route>\n        <Route path=\"/quotes\" element={<AllQuotes />} />\n        <Route path=\"/quotes/:quoteId\" element={<QuoteDetail />}>\n          <Route\n            path=\"\"\n            element={\n              <div className=\"centered\">\n                <Link className=\"btn--flat\" to={'comments'}>\n                  Load Comments\n                </Link>\n              </div>\n            }\n          />\n          <Route path={'comments'} element={<Comments />} />\n        </Route>\n        <Route path=\"/new-quote\" element={<NewQuote />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}